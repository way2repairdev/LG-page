cmake_minimum_required(VERSION 3.16)

project(Way2RepairLoginSystem VERSION 1.0.0 LANGUAGES CXX)

# Set C++ standard
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Qt configuration
set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)

# Find Qt6 packages
find_package(QT NAMES Qt6 Qt5 REQUIRED COMPONENTS Core Widgets Sql Network)
find_package(Qt${QT_VERSION_MAJOR} REQUIRED COMPONENTS Core Widgets Sql Network)

# Set directories
set(SRC_DIR ${CMAKE_CURRENT_SOURCE_DIR}/src)
set(INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/include)
set(RESOURCES_DIR ${CMAKE_CURRENT_SOURCE_DIR}/resources)

# Include directories
include_directories(
    ${INCLUDE_DIR}
    ${INCLUDE_DIR}/core
    ${INCLUDE_DIR}/ui
    ${INCLUDE_DIR}/database
    ${INCLUDE_DIR}/network
)

# Source files
set(CORE_SOURCES
    ${SRC_DIR}/core/main.cpp
)

set(UI_SOURCES
    ${SRC_DIR}/ui/mainwindow.cpp
    ${SRC_DIR}/ui/mainapplication.cpp
)

set(DATABASE_SOURCES
    ${SRC_DIR}/database/databasemanager.cpp
)

set(NETWORK_SOURCES
    # Add network source files here if needed
)

# Header files
set(UI_HEADERS
    ${INCLUDE_DIR}/ui/mainwindow.h
    ${INCLUDE_DIR}/ui/mainapplication.h
)

set(DATABASE_HEADERS
    ${INCLUDE_DIR}/database/databasemanager.h
)

set(NETWORK_HEADERS
    # Add network header files here if needed
)

# UI files
set(UI_FORMS
    ${RESOURCES_DIR}/ui/mainwindow.ui
)

# All project sources
set(PROJECT_SOURCES
    ${CORE_SOURCES}
    ${UI_SOURCES}
    ${DATABASE_SOURCES}
    ${NETWORK_SOURCES}
    ${UI_HEADERS}
    ${DATABASE_HEADERS}
    ${NETWORK_HEADERS}
    ${UI_FORMS}
)

# Create executable
if(${QT_VERSION_MAJOR} GREATER_EQUAL 6)
    qt_add_executable(Way2RepairLoginSystem
        MANUAL_FINALIZATION
        ${PROJECT_SOURCES}
    )
else()
    if(ANDROID)
        add_library(Way2RepairLoginSystem SHARED
            ${PROJECT_SOURCES}
        )
    else()
        add_executable(Way2RepairLoginSystem
            ${PROJECT_SOURCES}
        )
    endif()
endif()

# Link libraries
target_link_libraries(Way2RepairLoginSystem PRIVATE 
    Qt${QT_VERSION_MAJOR}::Core
    Qt${QT_VERSION_MAJOR}::Widgets 
    Qt${QT_VERSION_MAJOR}::Sql 
    Qt${QT_VERSION_MAJOR}::Network
)

# Set target properties
if(${QT_VERSION} VERSION_LESS 6.1.0)
    set(BUNDLE_ID_OPTION MACOSX_BUNDLE_GUI_IDENTIFIER com.way2repair.loginsystem)
endif()

set_target_properties(Way2RepairLoginSystem PROPERTIES
    ${BUNDLE_ID_OPTION}
    MACOSX_BUNDLE_BUNDLE_VERSION ${PROJECT_VERSION}
    MACOSX_BUNDLE_SHORT_VERSION_STRING ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}
    MACOSX_BUNDLE TRUE
    WIN32_EXECUTABLE TRUE
)

# Installation
include(GNUInstallDirs)
install(TARGETS Way2RepairLoginSystem
    BUNDLE DESTINATION .
    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
)

# Finalize executable (Qt6 only)
if(QT_VERSION_MAJOR EQUAL 6)
    qt_finalize_executable(Way2RepairLoginSystem)
endif()

# Print configuration info
message(STATUS "Project: ${PROJECT_NAME}")
message(STATUS "Version: ${PROJECT_VERSION}")
message(STATUS "Qt Version: ${QT_VERSION}")
message(STATUS "Build Type: ${CMAKE_BUILD_TYPE}")
message(STATUS "Source Directory: ${CMAKE_CURRENT_SOURCE_DIR}")
message(STATUS "Binary Directory: ${CMAKE_CURRENT_BINARY_DIR}")
